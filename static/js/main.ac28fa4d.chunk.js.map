{"version":3,"sources":["components/contacts/FormContacts.js","App.js","index.js"],"names":["FormContacts","state","contacts","name","nameInputId","shortid","generate","hendelChange","e","target","value","setState","hendelSubmit","preventDefault","props","onSubmit","reset","this","htmlFor","type","pattern","title","required","id","onChange","Component","App","formSubmitHandler","data","console","log","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qPA8DeA,E,4MAzDXC,MAAQ,CACPC,SAAU,GACXC,KAAM,I,EAGLC,YAAcC,IAAQC,W,EAGvBC,aAAe,SAAAC,GAAM,IAAD,EACQA,EAAEC,OAAlBN,EADQ,EACRA,KAAMO,EADE,EACFA,MACd,EAAKC,SAAL,eACKR,EAAOO,K,EAIhBE,aAAe,SAAAJ,GACXA,EAAEK,iBAEF,EAAKC,MAAMC,SAAS,EAAKd,OACzB,EAAKe,S,EAIXA,MAAQ,WACN,EAAKL,SAAS,CACXR,KAAM,M,4CAKT,WACI,OACP,uBAAMY,SAAUE,KAAKL,aAArB,UACO,wBAAOM,QAASD,KAAKb,YAArB,kBACO,uBACHe,KAAK,OACLT,MAAOO,KAAKhB,MAAME,KAClBA,KAAK,OACLiB,QAAQ,yHACRC,MAAM,kcACNC,UAAQ,EACRC,GAAIN,KAAKb,YACToB,SAAUP,KAAKV,kBAInB,wBAAQY,KAAK,SAAb,0BACA,0CACA,6BACE,6BAAKF,KAAKhB,MAAME,gB,GAlDCsB,aCmBZC,E,4MAjBbzB,MAAQ,CACNC,SAAU,I,EAGXyB,kBAAoB,SAAAC,GACnBC,QAAQC,IAAIF,I,4CAGd,WACE,OAEC,cAAC,EAAD,CAAcb,SAAUE,KAAKU,wB,GAbhBF,aCClBM,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ac28fa4d.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\n  //ставим npm i shortid\r\n  import shortid from 'shortid';\r\n\r\nclass FormContacts extends Component {\r\n    state = {\r\n     contacts: [],\r\n    name: ''\r\n    };\r\n//генерим там лежит уникалый индефикатор\r\n     nameInputId = shortid.generate();\r\n   \r\n    //общий метод для инпутов патерн для форм по внешнему виду контролируемій елемент\r\n    hendelChange = e => {\r\n        const { name, value } = e.target;\r\n        this.setState({\r\n            [name]: value,\r\n        })\r\n    };\r\n    //сабмит\r\n    hendelSubmit = e => { \r\n        e.preventDefault();\r\n        // console.log(this.state)\r\n        this.props.onSubmit(this.state)\r\n        this.reset();\r\n    };\r\n\r\n    //сброс формы очистить стейт\r\n  reset = () => {\r\n    this.setState({\r\n       name: '',\r\n             })\r\n  }\r\n\r\n\r\n    render() {\r\n        return (\r\n <form onSubmit={this.hendelSubmit}>\r\n        <label htmlFor={this.nameInputId}>\r\n          Name <input\r\n            type=\"text\"\r\n            value={this.state.name}\r\n            name=\"name\"\r\n            pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\r\n            title=\"Имя может состоять только из букв, апострофа, тире и пробелов. Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\r\n            required\r\n            id={this.nameInputId}\r\n            onChange={this.hendelChange}\r\n          />\r\n        </label>\r\n                \r\n        <button type='submit'>Add contacts</button>\r\n        <h1>Contacts</h1>\r\n        <ul>\r\n          <li>{this.state.name}</li>\r\n        </ul>\r\n      </form>\r\n            \r\n           \r\n        );\r\n    }\r\n}\r\nexport default FormContacts;","import React, { Component } from 'react';\nimport shortid from 'shortid';\n import FormContacts from './components/contacts/FormContacts'\n\nclass App extends Component {\n\n  state = {\n    contacts: [],\n    // name: ''\n  }\n   formSubmitHandler = data => {\n    console.log(data)\n  }\n\n  render() {\n    return (\n      \n     <FormContacts onSubmit={this.formSubmitHandler} />\n            \n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}